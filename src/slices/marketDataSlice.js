import { createSlice } from "@reduxjs/toolkit";
import fetchMarket from "./api/MarketDataApi";

// Create a Redux slice named "marketDataSlice" for managing market data.
const marketDataSlice = createSlice({
    name: 'marketData',
    initialState: {
        marketData: [], // Initialize marketData as an empty array
        status: 'idle', // Set initial status to 'idle'
        error: null, // Initialize the error field as null
    },
    reducers: {},
    extraReducers: (builder) => {
        builder
            .addCase(fetchMarket.pending, (state) => {
                // Update the status to 'loading' when a fetch is pending
                state.status = 'loading';
            })
            .addCase(fetchMarket.fulfilled, (state, action) => {
                // Update the marketData in the state with the fetched data
                state.marketData = action.payload;
            })
            .addCase(fetchMarket.rejected, (state, action) => {
                // Handle any error and update the status and error fields accordingly
                state.status = 'rejected';
                state.error = action.error.message;
            });
    },
});

export default marketDataSlice.reducer; // Export the reducer generated by the slice
